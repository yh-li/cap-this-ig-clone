{"version":3,"sources":["firebase.js","Comment.js","Post.js","ProfileIcon.js","ImageUpload.js","Header.js","PostList.js","Home.js","NotFound.js","SinglePostPage.js","SingleUserPage.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","Comment","commentId","postId","curUserName","username","text","setLoginOpen","useState","liked","setLiked","likes","setLikes","useEffect","collection","doc","onSnapshot","snapshot","docs","length","get","then","exists","className","key","IconButton","onClick","e","preventDefault","delete","update","likesNo","FieldValue","increment","set","color","aria-label","component","Post","forwardRef","ref","imageUrl","caption","timestamp","comments","setComments","comment","setComment","avatar","setAvatar","likedBy","setLikedBy","history","useHistory","console","log","orderBy","querySnapshot","empty","data","avatarUrl","unsubscribe","orderedComments","map","push","id","sort","comment1","comment2","seconds","to","Avatar","alt","src","style","textDecoration","fontSize","trim","fromNow","unix","type","placeholder","value","onChange","target","disabled","add","serverTimestamp","ProfileIcon","height","top","left","transform","modalStyle","avatarOpen","setAvatarOpen","classes","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","useStyles","url","setUrl","progress","setProgress","limit","catch","err","Modal","open","onClose","max","files","Button","name","put","on","Math","round","bytesTransferred","totalBytes","error","child","getDownloadURL","ImageUpload","setModalOpen","image","setImage","setCaption","Input","imageFileName","uuidv4","concat","getModalStyle","Header","setHomeUserName","loginOpen","setOpen","registerOpen","setRegisterOpen","setUsername","email","setEmail","password","setPassword","user","setUser","uploadOpen","setUploadOpen","onAuthStateChanged","authUser","displayName","signInWithEmailAndPassword","alert","message","createUserWithEmailAndPassword","updateProfile","currentUser","uid","signOut","PostList","postIds","curUsername","posts","setPosts","queryPosts","forEach","includes","post","Home","setPostIds","followingUsers","setFollowingUsers","followingUsernames","usersPostsIds","postUsername","NotFound","setHomeUser","SinglePostPage","props","setPost","match","params","SingleUserPage","profileUsername","setProfileUsername","viewUsername","setViewUsername","postNo","setPostNo","followerNo","setFollowerNo","followingNo","setFollowingNo","followed","setFollowed","userPostIds","Link","following","App","exact","path","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.63cb4d55.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyCZ7SX_2NwAxflElWcWaOe7QuqBk2oXRvk\",\r\n  authDomain: \"cap-this.firebaseapp.com\",\r\n  databaseURL: \"https://cap-this-default-rtdb.firebaseio.com\",\r\n  projectId: \"cap-this\",\r\n  storageBucket: \"cap-this.appspot.com\",\r\n  messagingSenderId: \"357983648624\",\r\n  appId: \"1:357983648624:web:fa4a414168ee3a9317edb5\",\r\n  measurementId: \"G-2C4QFNL1B1\",\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nexport { db, auth, storage };\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Comment.css\";\r\nimport { db } from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\n\r\nfunction Comment({\r\n  commentId,\r\n  postId,\r\n  curUserName,\r\n  username,\r\n  text,\r\n  setLoginOpen,\r\n}) {\r\n  const [liked, setLiked] = useState();\r\n  const [likes, setLikes] = useState(0);\r\n  useEffect(() => {\r\n    db.collection(\"posts\")\r\n      .doc(postId)\r\n      .collection(\"comments\")\r\n      .doc(commentId)\r\n      .collection(\"likes\")\r\n      .onSnapshot((snapshot) => {\r\n        setLikes(snapshot.docs.length);\r\n      });\r\n  }, []);\r\n  useEffect(() => {\r\n    //see if the curUserhas liked the comment\r\n    /*     console.log(\r\n      \"comment reloaded with comment id \",\r\n      commentId,\r\n      \" and postId \",\r\n      postId\r\n    ); */\r\n    if (curUserName) {\r\n      db.collection(\"posts\")\r\n        .doc(postId)\r\n        .collection(\"comments\")\r\n        .doc(commentId)\r\n        .collection(\"likes\")\r\n        .doc(curUserName)\r\n        .get()\r\n        .then((doc) => {\r\n          if (doc.exists) {\r\n            setLiked(true);\r\n          } else {\r\n            setLiked(false);\r\n          }\r\n        });\r\n    } else {\r\n      setLiked(false);\r\n    }\r\n  }, [curUserName]);\r\n  const handleLike = (e) => {\r\n    e.preventDefault();\r\n    if (liked != null) {\r\n      if (liked) {\r\n        db.collection(\"posts\")\r\n          .doc(postId)\r\n          .collection(\"comments\")\r\n          .doc(commentId)\r\n          .collection(\"likes\")\r\n          .doc(curUserName)\r\n          .delete();\r\n        db.collection(\"posts\")\r\n          .doc(postId)\r\n          .collection(\"comments\")\r\n          .doc(commentId)\r\n          .update({ likesNo: firebase.firestore.FieldValue.increment(-1) });\r\n\r\n        setLiked(false);\r\n      } else if (curUserName) {\r\n        db.collection(\"posts\")\r\n          .doc(postId)\r\n          .collection(\"comments\")\r\n          .doc(commentId)\r\n          .collection(\"likes\")\r\n          .doc(curUserName)\r\n          .set({ liked: true });\r\n        db.collection(\"posts\")\r\n          .doc(postId)\r\n          .collection(\"comments\")\r\n          .doc(commentId)\r\n          .update({ likesNo: firebase.firestore.FieldValue.increment(1) });\r\n        setLiked(true);\r\n      } else {\r\n        setLoginOpen(true);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"comment\" key=\"comment.id\">\r\n      <div>\r\n        <b>{username}</b> {text}\r\n      </div>\r\n      <IconButton onClick={handleLike}>\r\n        {liked ? <FavoriteIcon /> : <FavoriteBorderIcon />}\r\n      </IconButton>\r\n      {likes > 0 ? <div>{likes}</div> : <></>}\r\n      {curUserName === username ? (\r\n        <IconButton\r\n          color=\"primary\"\r\n          aria-label=\"upload picture\"\r\n          component=\"span\"\r\n          className=\"delete-comment\"\r\n          onClick={() => {\r\n            db.collection(\"posts\")\r\n              .doc(postId)\r\n              .collection(\"comments\")\r\n              .doc(commentId)\r\n              .delete();\r\n          }}\r\n        >\r\n          <DeleteIcon className=\"delete-icon\" />\r\n        </IconButton>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n","import React, { useState, useEffect, forwardRef } from \"react\";\r\nimport \"./Post.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { db } from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport Comment from \"./Comment\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport Moment from \"react-moment\";\r\n\r\nconst Post = forwardRef(\r\n  (\r\n    {\r\n      username,\r\n      postId,\r\n      imageUrl,\r\n      caption,\r\n      curUserName,\r\n      setLoginOpen,\r\n      timestamp,\r\n    },\r\n    ref\r\n  ) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [comment, setComment] = useState(\"\");\r\n    const [avatar, setAvatar] = useState(\"/static/images/avatar/1.jpg\");\r\n    const [liked, setLiked] = useState();\r\n    const [likedBy, setLikedBy] = useState();\r\n    const history = useHistory();\r\n    useEffect(() => {\r\n      console.log(\"Post Reloaded\");\r\n      db.collection(\"avatars\")\r\n        .doc(username)\r\n        .collection(\"avatarUrls\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((querySnapshot) => {\r\n          if (!querySnapshot.empty) {\r\n            setAvatar(querySnapshot.docs[0].data().avatarUrl);\r\n          } else {\r\n            console.log(\"No avatar and this is from Post!!!!!\");\r\n          }\r\n        });\r\n      if (curUserName) {\r\n        db.collection(\"posts\")\r\n          .doc(postId)\r\n          .collection(\"likes\")\r\n          .doc(curUserName)\r\n          .get()\r\n          .then((doc) => {\r\n            if (doc.exists) {\r\n              setLiked(true);\r\n            } else {\r\n              setLiked(false);\r\n            }\r\n          });\r\n      } else {\r\n        setLiked(false);\r\n      }\r\n      db.collection(\"posts\")\r\n        .doc(postId)\r\n        .collection(\"likes\")\r\n        .onSnapshot((querySnapshot) => {\r\n          setLikedBy(querySnapshot.docs.length);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      console.log(\"Post ID changed\");\r\n      let unsubscribe;\r\n      if (postId) {\r\n        unsubscribe = db\r\n          .collection(\"posts\") //accessing posts\r\n          .doc(postId) //going to that specific postId document\r\n          .collection(\"comments\") //going inside its comments collection\r\n          .onSnapshot((snapshot) => {\r\n            const orderedComments = [];\r\n            snapshot.docs.map((doc) => {\r\n              orderedComments.push({ id: doc.id, comment: doc.data() });\r\n            });\r\n            orderedComments.sort((comment1, comment2) => {\r\n              if (comment2.comment.likesNo !== comment1.comment.likesNo) {\r\n                return comment2.comment.likesNo - comment1.comment.likesNo;\r\n              } else if (\r\n                comment1.comment.timestamp &&\r\n                comment2.comment.timestamp\r\n              ) {\r\n                return (\r\n                  comment1.comment.timestamp.seconds -\r\n                  comment2.comment.timestamp.seconds\r\n                );\r\n              } else if (comment1.comment.timestamp) {\r\n                return -1;\r\n              } else {\r\n                return 1;\r\n              }\r\n            });\r\n            setComments(orderedComments);\r\n          }); //this on snapchat means anytime there's a new comment added\r\n        //there's the listener to this specific post\r\n      }\r\n\r\n      return () => {\r\n        unsubscribe();\r\n      };\r\n    }, [postId]);\r\n\r\n    const postComment = (e) => {\r\n      e.preventDefault();\r\n\r\n      db.collection(\"posts\").doc(postId).collection(\"comments\").add({\r\n        text: comment,\r\n        username: curUserName,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        likesNo: 0,\r\n      });\r\n      setComment(\"\");\r\n    };\r\n\r\n    const handleLike = (e) => {\r\n      e.preventDefault();\r\n      if (liked != null) {\r\n        if (liked) {\r\n          db.collection(\"posts\")\r\n            .doc(postId)\r\n            .collection(\"likes\")\r\n            .doc(curUserName)\r\n            .delete();\r\n          setLiked(false);\r\n        } else if (curUserName) {\r\n          db.collection(\"posts\")\r\n            .doc(postId)\r\n            .collection(\"likes\")\r\n            .doc(curUserName)\r\n            .set({ liked: true });\r\n          setLiked(true);\r\n        } else {\r\n          setLoginOpen(true);\r\n        }\r\n      }\r\n    };\r\n    const handleComment = (e) => {\r\n      e.preventDefault();\r\n      if (curUserName) {\r\n        history.push(`/posts/${postId}`);\r\n      } else {\r\n        setLoginOpen(true);\r\n      }\r\n    };\r\n    useEffect(() => {\r\n      //liked needs to be reset\r\n      if (curUserName) {\r\n        db.collection(\"posts\")\r\n          .doc(postId)\r\n          .collection(\"likes\")\r\n          .doc(curUserName)\r\n          .get()\r\n          .then((doc) => {\r\n            if (doc.exists) {\r\n              setLiked(true);\r\n            } else {\r\n              setLiked(false);\r\n            }\r\n          });\r\n      } else {\r\n        setLiked(false);\r\n      }\r\n    }, [curUserName]);\r\n    return (\r\n      <div className=\"post\" ref={ref}>\r\n        <div className=\"post__header\">\r\n          <div className=\"post__meta\">\r\n            <Link to={`/users/${username}`}>\r\n              <Avatar className=\"post__avatar\" alt={username} src={avatar} />\r\n            </Link>\r\n            <Link\r\n              to={`/users/${username}`}\r\n              style={{ color: \"inherit\", textDecoration: \"none\" }}\r\n            >\r\n              <h3>{username}</h3>\r\n            </Link>\r\n          </div>\r\n          <div className=\"post__option\">\r\n            {curUserName && curUserName === username ? (\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"upload picture\"\r\n                component=\"span\"\r\n                className=\"post__delete\"\r\n                onClick={() => {\r\n                  db.collection(\"posts\")\r\n                    .doc(postId)\r\n                    .collection(\"comments\")\r\n                    .onSnapshot((snapshot) => {\r\n                      snapshot.docs.map((doc) => {\r\n                        doc.ref.delete();\r\n                      });\r\n                    });\r\n                  db.collection(\"posts\").doc(postId).delete();\r\n                  db.collection(\"users\")\r\n                    .doc(username)\r\n                    .collection(\"postIds\")\r\n                    .doc(postId)\r\n                    .delete()\r\n                    .then(() => {\r\n                      console.log(\r\n                        \"Deletion Done with postId \",\r\n                        postId,\r\n                        \" from user \",\r\n                        username\r\n                      );\r\n                    });\r\n                }}\r\n              >\r\n                <DeleteIcon style={{ fontSize: 20 }} className=\"delete-icon\" />\r\n              </IconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {imageUrl ? (\r\n          imageUrl.trim() === \"\" ? (\r\n            <></>\r\n          ) : (\r\n            <img className=\"post__image\" src={imageUrl} alt=\"post\" />\r\n          )\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {caption ? (\r\n          <h4 className=\"post__text\">\r\n            <Link\r\n              to={`/users/${username}`}\r\n              style={{ color: \"inherit\", textDecoration: \"none\" }}\r\n            >\r\n              {username}\r\n            </Link>{\" \"}\r\n            <span className=\"post__caption\">{caption}</span>\r\n          </h4>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <div className=\"post__button__row\">\r\n          <div className=\"post__button__row__left\">\r\n            <IconButton onClick={handleLike}>\r\n              {liked ? <FavoriteIcon /> : <FavoriteBorderIcon />}\r\n            </IconButton>\r\n            <IconButton onClick={handleComment}>\r\n              <ChatBubbleOutlineIcon />\r\n            </IconButton>\r\n            <IconButton>\r\n              <ShareIcon />\r\n            </IconButton>\r\n          </div>\r\n          <div className=\"post__button__row__left\">\r\n            <IconButton>\r\n              <BookmarkBorderIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        {likedBy > 0 ? (\r\n          <div className=\"post__liked_by\">Liked by {likedBy}</div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <div className=\"post__comments\">\r\n          {comments.map(({ id, comment }) => {\r\n            return (\r\n              <Comment\r\n                key={id}\r\n                commentId={id}\r\n                postId={postId}\r\n                curUserName={curUserName}\r\n                username={comment.username}\r\n                text={comment.text}\r\n                setLoginOpen={setLoginOpen}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        {timestamp ? (\r\n          <div className=\"post__timestamp\">\r\n            <Moment fromNow unix>\r\n              {timestamp.seconds}\r\n            </Moment>\r\n          </div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {curUserName && (\r\n          <form className=\"post__commentBox\">\r\n            <input\r\n              className=\"post__input\"\r\n              type=\"text\"\r\n              placeholder=\"Add a comment...\"\r\n              value={comment}\r\n              onChange={(e) => setComment(e.target.value)}\r\n            />\r\n\r\n            <button\r\n              disabled={!comment}\r\n              className=\"post__button\"\r\n              type=\"submit\"\r\n              onClick={postComment}\r\n            >\r\n              Post\r\n            </button>\r\n          </form>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Post;\r\n","import React, { useState } from \"react\";\r\nimport \"./ProfileIcon.css\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  IconButton,\r\n  Modal,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport firebase from \"firebase\";\r\nimport { storage, db } from \"./firebase\";\r\nfunction ProfileIcon({ username }) {\r\n  const [modalStyle] = useState(getModalStyle);\r\n  const [avatarOpen, setAvatarOpen] = useState(false);\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: \"absolute\",\r\n      width: 400,\r\n      height: 200,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"2px solid #000\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  function getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n      height: \"300px\",\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  const [avatar, setAvatar] = useState(null);\r\n  const [url, setUrl] = useState(\"/static/images/avatar/1.jpg\");\r\n  const [progress, setProgress] = useState(0);\r\n  console.log(\"Avatar rerenders\");\r\n  if (username) {\r\n    db.collection(\"avatars\")\r\n      .doc(username)\r\n      .collection(\"avatarUrls\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .limit(1)\r\n      .get()\r\n      .then((querySnapshot) => {\r\n        if (!querySnapshot.empty) {\r\n          querySnapshot.docs.map((doc) => {\r\n            setUrl(doc.data().avatarUrl);\r\n          });\r\n        } else {\r\n          console.log(\"No avatar from Profile Icon\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        setUrl(\"/\");\r\n      });\r\n  }\r\n  const handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setAvatar(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    //get a reference, access the storage in firebase\r\n    //put avatar put the avatar you just selected to the\r\n    if (avatar) {\r\n      const uploadTask = storage.ref(`avatars/${avatar.name}`).put(avatar);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          // progress function ...\r\n          const progress = Math.round(\r\n            //a percentage upload progress\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            //for visualizing the upload progress\r\n          );\r\n          setProgress(progress);\r\n        },\r\n        (error) => {\r\n          // Error function ...\r\n          console.log(error);\r\n        },\r\n        () => {\r\n          storage\r\n            .ref(\"avatars\") //go to the avatar folder\r\n            .child(avatar.name) //go to the avatar.name file\r\n            .getDownloadURL() //and then get the downloading file\r\n            .then((url) => {\r\n              setUrl(url);\r\n              // complete function ...\r\n              console.log(url);\r\n              // post avatar inside db\r\n              db.collection(\"avatars\")\r\n                .doc(username)\r\n                .collection(\"avatarUrls\")\r\n                .add({\r\n                  avatarUrl: url,\r\n                  timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                });\r\n\r\n              setProgress(0);\r\n              setAvatar(null);\r\n              setAvatarOpen(false);\r\n            });\r\n        }\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        onClick={() => {\r\n          setAvatarOpen(true);\r\n        }}\r\n      >\r\n        <Avatar className=\"app__headerAvatar\" alt={username} src={url} />\r\n      </IconButton>\r\n      <Modal open={avatarOpen} onClose={() => setAvatarOpen(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <form className=\"app__setAvatar\">\r\n            <div className=\"avatar\">\r\n              <progress\r\n                className=\"avatarupload__progress\"\r\n                value={progress}\r\n                max=\"100\"\r\n              />\r\n              <div>\r\n                <input type=\"file\" onChange={handleChange} />\r\n                <Button className=\"avatarupload__button\" onClick={handleUpload}>\r\n                  Set a profile image...\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileIcon;\r\n","import React, { useState } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport { storage, db } from \"./firebase\";\r\nimport \"./ImageUpload.css\";\r\nimport { Input, Button } from \"@material-ui/core\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst ImageUpload = ({ username, setModalOpen }) => {\r\n  const [image, setImage] = useState(null);\r\n  const [url, setUrl] = useState(\"\");\r\n  const [progress, setProgress] = useState(0);\r\n  const [caption, setCaption] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    //get a reference, access the storage in firebase\r\n    //put image put the image you just selected to the\r\n    if (image) {\r\n      //build a unique name\r\n      const imageFileName = uuidv4().concat(\"-\", image.name);\r\n      const uploadTask = storage.ref(`images/${imageFileName}`).put(image);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          // progress function ...\r\n          const progress = Math.round(\r\n            //a percentage upload progress\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            //for visualizing the upload progress\r\n          );\r\n          setProgress(progress);\r\n        },\r\n        (error) => {\r\n          // Error function ...\r\n          console.log(error);\r\n        },\r\n        () => {\r\n          // complete function ...\r\n          storage\r\n            .ref(\"images\") //go to the image folder\r\n            .child(imageFileName) //go to the image.name file\r\n            .getDownloadURL() //and then get the downloading file\r\n            .then((url) => {\r\n              setUrl(url);\r\n\r\n              // post image inside db\r\n              db.collection(\"posts\")\r\n                .add({\r\n                  imageUrl: url,\r\n                  caption: caption,\r\n                  username: username,\r\n                  timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                })\r\n                .then((doc) => {\r\n                  db.collection(\"users\")\r\n                    .doc(username)\r\n                    .collection(\"postIds\")\r\n                    .doc(doc.id)\r\n                    .set({\r\n                      postId: doc.id,\r\n                    });\r\n                });\r\n\r\n              setProgress(0);\r\n              setCaption(\"\");\r\n              setImage(null);\r\n            });\r\n        }\r\n      );\r\n    } else if (caption.trim() !== \"\") {\r\n      db.collection(\"posts\")\r\n        .add({\r\n          caption: caption,\r\n          username: username,\r\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n        .then((doc) => {\r\n          db.collection(\"users\")\r\n            .doc(username)\r\n            .collection(\"postIds\")\r\n            .doc(doc.id)\r\n            .set({\r\n              postId: doc.id,\r\n            });\r\n        });\r\n      setCaption(\"\");\r\n    } else {\r\n    }\r\n    if (setModalOpen) {\r\n      setModalOpen(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"imageupload\">\r\n      <progress className=\"imageupload__progress\" value={progress} max=\"100\" />\r\n      <Input\r\n        placeholder=\"Enter a caption\"\r\n        value={caption}\r\n        onChange={(e) => setCaption(e.target.value)}\r\n      />\r\n      <div>\r\n        <input type=\"file\" onChange={handleChange} />\r\n        <Button className=\"imageupload__button\" onClick={handleUpload}>\r\n          Upload\r\n        </Button>\r\n      </div>\r\n\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport { db, auth } from \"./firebase\";\r\nimport {\r\n  Button,\r\n  Avatar,\r\n  makeStyles,\r\n  Modal,\r\n  Input,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport ProfileIcon from \"./ProfileIcon\";\r\nimport AddAPhotoIcon from \"@material-ui/icons/AddAPhoto\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ImageUpload from \"./ImageUpload\";\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    height: \"300px\",\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    height: 200,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\nfunction Header({ setHomeUserName, loginOpen, setLoginOpen }) {\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n  const [open, setOpen] = useState(loginOpen);\r\n  const [registerOpen, setRegisterOpen] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n  const [uploadOpen, setUploadOpen] = useState(false);\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\r\n      //listen for any single time any authentication changes\r\n      //like login, logout\r\n      console.log(\"Auth State Change.\");\r\n      if (authUser) {\r\n        // user is logged in...\r\n        setUser(authUser);\r\n        if (authUser.displayName) {\r\n          console.log(authUser.displayName);\r\n          console.log(\"Signed in\");\r\n          setHomeUserName(authUser.displayName);\r\n        } else {\r\n          console.log(\"New user signed in\");\r\n        }\r\n      } else {\r\n        //use logged out\r\n        setUser(null);\r\n        setHomeUserName(null);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      //perform some clean up actions when user or username changes\r\n      unsubscribe();\r\n    };\r\n  }, [user, username]);\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((authUser) => {\r\n        setHomeUserName(authUser.user.displayName);\r\n      })\r\n      .catch((error) => alert(error.message));\r\n\r\n    setOpen(false);\r\n    setLoginOpen(false);\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"New Register\");\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((authUser) => {\r\n        //console.log(authUser);\r\n        return authUser.user.updateProfile({\r\n          displayName: username,\r\n        });\r\n      })\r\n      .then(() => {\r\n        db.collection(\"users\").doc(auth.currentUser.displayName).set({\r\n          username: auth.currentUser.displayName,\r\n          uid: auth.currentUser.uid,\r\n        });\r\n        setHomeUserName(auth.currentUser.displayName);\r\n      })\r\n      .catch((error) => alert(error.message));\r\n\r\n    setRegisterOpen(false);\r\n  };\r\n  const handleUpload = (e) => {\r\n    e.preventDefault();\r\n  };\r\n  useEffect(() => {\r\n    console.log(\"Header's open has been reset to \", open);\r\n  }, [open]);\r\n  return (\r\n    <div className=\"header\">\r\n      <Modal\r\n        open={open}\r\n        onClose={() => {\r\n          setOpen(false);\r\n          setLoginOpen(false);\r\n        }}\r\n      >\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <form className=\"home__login\">\r\n            <center>\r\n              <img className=\"home__headerImage\" src=\"capThisLogo.png\" alt=\"\" />\r\n            </center>\r\n\r\n            <Input\r\n              placeholder=\"email\"\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Input\r\n              placeholder=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button onClick={handleLogin}>Login</Button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal open={registerOpen} onClose={() => setRegisterOpen(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <form className=\"home__login\">\r\n            <center>\r\n              <img className=\"home__headerImage\" src=\"capThisLogo.png\" alt=\"\" />\r\n            </center>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <Input\r\n              placeholder=\"email\"\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Input\r\n              placeholder=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button onClick={handleRegister}>Register</Button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n      <Modal\r\n        open={uploadOpen}\r\n        onClose={() => {\r\n          setUploadOpen(false);\r\n        }}\r\n      >\r\n        <div style={modalStyle} className={classes.paper}>\r\n          upload something. please. {user?.displayName}\r\n          <ImageUpload\r\n            username={user?.displayName}\r\n            setModalOpen={setUploadOpen}\r\n          />\r\n        </div>\r\n      </Modal>\r\n      <div className=\"home__header\">\r\n        <Link to=\"/\">\r\n          {\" \"}\r\n          <img className=\"home__headerImage\" src=\"/capThisLogo.png\" alt=\"\" />\r\n        </Link>\r\n        {user?.displayName ? (\r\n          <div className=\"home__headerRight\">\r\n            <IconButton\r\n              onClick={() => {\r\n                setUploadOpen(true);\r\n              }}\r\n            >\r\n              <AddAPhotoIcon />\r\n            </IconButton>\r\n            <Button\r\n              onClick={() => {\r\n                auth.signOut();\r\n                console.log(\"SIGN OUT!\");\r\n              }}\r\n            >\r\n              Logout\r\n            </Button>\r\n            <ProfileIcon username={user.displayName} />\r\n          </div>\r\n        ) : (\r\n          <form className=\"home__loginHome\">\r\n            <Button\r\n              onClick={() => {\r\n                setOpen(true);\r\n                setLoginOpen(true);\r\n              }}\r\n            >\r\n              Login\r\n            </Button>\r\n            <Button onClick={() => setRegisterOpen(true)}>Sign Up</Button>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport Post from \"./Post\";\r\nimport { db } from \"./firebase\";\r\nfunction PostList({ postIds, curUsername, setLoginOpen }) {\r\n  const [posts, setPosts] = useState([]);\r\n  useEffect(() => {\r\n    console.log(\"Post list has been re rendered\");\r\n    if (postIds.length > 0) {\r\n      db.collection(\"posts\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .get()\r\n        .then((snapshot) => {\r\n          const queryPosts = [];\r\n\r\n          snapshot.forEach((doc) => {\r\n            if (postIds.includes(doc.id)) {\r\n              console.log(doc.data());\r\n              queryPosts.push({ id: doc.id, post: doc.data() });\r\n            }\r\n          });\r\n          setPosts(queryPosts);\r\n        });\r\n    } else {\r\n      setPosts([]);\r\n    }\r\n  }, [postIds]);\r\n  return (\r\n    <FlipMove>\r\n      {posts.map(({ id, post }) => {\r\n        return (\r\n          <Post\r\n            key={id}\r\n            postId={id}\r\n            username={post.username}\r\n            caption={post.caption}\r\n            imageUrl={post.imageUrl}\r\n            curUserName={curUsername}\r\n            setLoginOpen={setLoginOpen}\r\n            timestamp={post.timestamp}\r\n          />\r\n        );\r\n      })}\r\n    </FlipMove>\r\n  );\r\n}\r\n\r\nexport default PostList;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Home.css\";\r\nimport Post from \"./Post\";\r\nimport Header from \"./Header\";\r\nimport PostList from \"./PostList\";\r\nimport { db, auth } from \"./firebase\";\r\nimport {\r\n  Button,\r\n  Avatar,\r\n  makeStyles,\r\n  Modal,\r\n  Input,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport ProfileIcon from \"./ProfileIcon\";\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    height: \"300px\",\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    height: 200,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nfunction Home({ user }) {\r\n  const [postIds, setPostIds] = useState();\r\n  const [username, setUsername] = useState(\"\");\r\n  const [followingUsers, setFollowingUsers] = useState();\r\n  const [loginOpen, setLoginOpen] = useState(false);\r\n\r\n  //useEffect runs a piece of code based on a specific condition\r\n  //if we leave the conditions as blank\r\n  //it will run once when the component loads\r\n  //useEffect(()=>{\r\n  //this is the callback function, or the code that will run\r\n  //}),[INSIDE ARE CONDITIONS])\r\n  //if we leave [posts] there as conditions, it will run\r\n  //everytime [posts] changes\r\n\r\n  //console.log(db.collection(\"posts\").orderBy(\"timestamp\", \"desc\"));\r\n  useEffect(() => {\r\n    console.log(\"username changed to \", username);\r\n    if (username) {\r\n      db.collection(\"users\")\r\n        .doc(username)\r\n        .collection(\"followings\")\r\n        .onSnapshot((snapshot) => {\r\n          const followingUsernames = [];\r\n          snapshot.forEach((doc) => {\r\n            followingUsernames.push(doc.id);\r\n          });\r\n          followingUsernames.push(username);\r\n          console.log(followingUsernames);\r\n          setFollowingUsers(followingUsernames);\r\n        });\r\n    } else {\r\n      setFollowingUsers();\r\n    }\r\n  }, [username]);\r\n  useEffect(() => {\r\n    if (followingUsers && followingUsers.length > 0) {\r\n      /*       db.collection(\"posts\")\r\n        .where(\"username\", \"in\", followingUsers)\r\n        .onSnapshot((snapshot) => {\r\n                    setPosts(\r\n        snapshot.docs.map((doc) => ({ id: doc.id, post: doc.data() }))\r\n      ); \r\n          console.log(\"Post list should be changed!\");\r\n          const usersPostIds = [];\r\n          snapshot.forEach((doc) => {\r\n            usersPostIds.push(doc.id);\r\n          });\r\n          setPostIds(usersPostIds);\r\n        }); */\r\n\r\n      const getPostIds = () => {\r\n        db.collection(\"posts\").onSnapshot((snapshot) => {\r\n          const usersPostsIds = [];\r\n          snapshot.docs.map((doc) => {\r\n            const postUsername = doc.data().username;\r\n            if (followingUsers.includes(postUsername)) {\r\n              usersPostsIds.push(doc.id);\r\n            }\r\n          });\r\n          console.log(usersPostsIds);\r\n          setPostIds(usersPostsIds);\r\n        });\r\n      };\r\n      getPostIds();\r\n    } else {\r\n      setPostIds();\r\n    }\r\n  }, [followingUsers]);\r\n  useEffect(() => {\r\n    console.log(\"post ids has changed to \", postIds);\r\n    if (postIds) {\r\n      console.log(postIds.length);\r\n    }\r\n  }, [postIds]);\r\n  /*   const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch((error) => alert(error.message));\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((authUser) => {\r\n        return authUser.user.updateProfile({\r\n          displayName: username,\r\n        });\r\n      })\r\n      .catch((error) => alert(error.message));\r\n    setRegisterOpen(false);\r\n  }; */\r\n  return (\r\n    <div className=\"home\">\r\n      <Header\r\n        setHomeUserName={setUsername}\r\n        loginOpen={false}\r\n        setLoginOpen={() => null}\r\n      />\r\n      {/* <Modal open={open} onClose={() => setOpen(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <form className=\"home__login\">\r\n            <center>\r\n              <img className=\"home__headerImage\" src=\"capThisLogo.png\" alt=\"\" />\r\n            </center>\r\n\r\n            <Input\r\n              placeholder=\"email\"\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Input\r\n              placeholder=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button onClick={handleLogin}>Login</Button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal open={registerOpen} onClose={() => setRegisterOpen(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <form className=\"home__login\">\r\n            <center>\r\n              <img className=\"home__headerImage\" src=\"capThisLogo.png\" alt=\"\" />\r\n            </center>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <Input\r\n              placeholder=\"email\"\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Input\r\n              placeholder=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button onClick={handleRegister}>Register</Button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n      <div className=\"home__header\">\r\n        <img className=\"home__headerImage\" src=\"capThisLogo.png\" alt=\"\" />\r\n        {user?.displayName ? (\r\n          <div className=\"home__headerRight\">\r\n            <Button onClick={() => auth.signOut()}>Logout</Button>\r\n            <ProfileIcon user={user} />\r\n          </div>\r\n        ) : (\r\n          <form className=\"home__loginHome\">\r\n            <Button onClick={() => setOpen(true)}>Login</Button>\r\n            <Button onClick={() => setRegisterOpen(true)}>Sign Up</Button>\r\n          </form>\r\n        )}\r\n      </div> */}\r\n\r\n      {/* <Post\r\n        user=\"d\"\r\n        key={23123123}\r\n        postId={\"\"}\r\n        username={\"helloya\"}\r\n        caption={\"captionThis!\"}\r\n        imageUrl=\"https://support-wildrift.riotgames.com/hc/article_attachments/360104660413/WR_LuxTrial_EventArticle_Banner.jpg\"\r\n      />\r\n      <Post\r\n        user=\"d\"\r\n        key={23123123}\r\n        postId={\"\"}\r\n        username={\"helloya\"}\r\n        caption={\"captionThis!\"}\r\n        imageUrl=\"https://static.wikia.nocookie.net/leagueoflegends/images/f/f4/Lux_Render.png/revision/latest?cb=20200209203614\"\r\n      /> */}\r\n      <div className=\"home__posts\">\r\n        <div className=\"home__postsLeft\">\r\n          {postIds ? (\r\n            <PostList\r\n              postIds={postIds}\r\n              setLoginOpen={setLoginOpen}\r\n              curUsername={username}\r\n            />\r\n          ) : (\r\n            <></>\r\n          )}\r\n        </div>\r\n      </div>\r\n\r\n      {username ? (\r\n        <></>\r\n      ) : (\r\n        <center>\r\n          <h3>Login to upload</h3>\r\n        </center>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nfunction NotFound() {\r\n  return (\r\n    <div>\r\n      <Header setHomeUser={() => null} />\r\n      404\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport Header from \"./Header\";\r\nimport Post from \"./Post\";\r\n\r\nfunction SinglePostPage(props) {\r\n  const [username, setUsername] = useState();\r\n  const [post, setPost] = useState();\r\n  const [postId, setPostId] = useState(props.match.params.postId);\r\n  const [loginOpen, setLoginOpen] = useState(false);\r\n  /*   useEffect(() => {\r\n    console.log(\"username changed to \", username);\r\n  }, [username]); */\r\n  useEffect(() => {\r\n    console.log(\"Single Post Page Reloaded.\");\r\n    if (postId) {\r\n      db.collection(\"posts\")\r\n        .doc(postId)\r\n        .onSnapshot((doc) => {\r\n          console.log(\"post refreshed\");\r\n          setPost(doc.data());\r\n        });\r\n    }\r\n  }, [postId]);\r\n  useEffect(() => {\r\n    console.log(\"Username changed to \", username);\r\n  }, [username]);\r\n  useEffect(() => {\r\n    console.log(\"loginOpen has been reset to \", loginOpen);\r\n  }, [loginOpen]);\r\n  return (\r\n    <div>\r\n      <Header\r\n        key={loginOpen}\r\n        setHomeUserName={setUsername}\r\n        loginOpen={loginOpen}\r\n        setLoginOpen={setLoginOpen}\r\n      />\r\n\r\n      {post ? (\r\n        <Post\r\n          postId={postId}\r\n          username={post.username}\r\n          caption={post.caption}\r\n          imageUrl={post.imageUrl}\r\n          curUserName={username}\r\n          setLoginOpen={setLoginOpen}\r\n          timestamp={post.timestamp}\r\n        />\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SinglePostPage;\r\n","import { Avatar, IconButton, Link } from \"@material-ui/core\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { db } from \"./firebase\";\r\nimport Header from \"./Header\";\r\nimport Post from \"./Post\";\r\nimport ProfileIcon from \"./ProfileIcon\";\r\nimport ControlPointIcon from \"@material-ui/icons/ControlPoint\";\r\nimport HighlightOffIcon from \"@material-ui/icons/HighlightOff\";\r\nimport PostList from \"./PostList\";\r\n\r\nfunction SingleUserPage(props) {\r\n  const [avatar, setAvatar] = useState(\"\");\r\n  const [profileUsername, setProfileUsername] = useState();\r\n  const [loginOpen, setLoginOpen] = useState(false);\r\n  const [viewUsername, setViewUsername] = useState();\r\n  const [postNo, setPostNo] = useState(0);\r\n  const [followerNo, setFollowerNo] = useState(0);\r\n  const [followingNo, setFollowingNo] = useState(0);\r\n  const [followed, setFollowed] = useState();\r\n  const [postIds, setPostIds] = useState();\r\n  /*   useEffect(() => {\r\n    console.log(\"username changed to \", username);\r\n  }, [username]); */\r\n  useEffect(() => {\r\n    db.collection(\"users\")\r\n      .doc(props.match.params.username)\r\n      .onSnapshot((doc) => {\r\n        if (doc.exists) {\r\n          setProfileUsername(doc.data().username);\r\n        } else {\r\n          setProfileUsername(null);\r\n        }\r\n      });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (profileUsername) {\r\n      db.collection(\"users\")\r\n        .doc(profileUsername)\r\n        .collection(\"postIds\")\r\n        .onSnapshot((snapshot) => {\r\n          setPostNo(snapshot.docs.length);\r\n        });\r\n      db.collection(\"users\")\r\n        .doc(profileUsername)\r\n        .collection(\"followers\")\r\n        .onSnapshot((snapshot) => {\r\n          setFollowerNo(snapshot.docs.length);\r\n        });\r\n      db.collection(\"users\")\r\n        .doc(profileUsername)\r\n        .collection(\"followings\")\r\n        .onSnapshot((snapshot) => {\r\n          setFollowingNo(snapshot.docs.length);\r\n        });\r\n      db.collection(\"users\")\r\n        .doc(profileUsername)\r\n        .collection(\"postIds\")\r\n        .onSnapshot((snapshot) => {\r\n          /*           setPosts(\r\n            snapshot.docs.map((doc) => ({ id: doc.id, post: doc.data() }))\r\n          ); */\r\n          const userPostIds = [];\r\n          snapshot.forEach((doc) => {\r\n            userPostIds.push(doc.id);\r\n          });\r\n          setPostIds(userPostIds);\r\n        });\r\n      //set profile user avatar\r\n      db.collection(\"avatars\")\r\n        .doc(profileUsername)\r\n        .collection(\"avatarUrls\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((querySnapshot) => {\r\n          if (!querySnapshot.empty) {\r\n            setAvatar(querySnapshot.docs[0].data().avatarUrl);\r\n          } else {\r\n            console.log(\r\n              \"No avatar and this is from single post page headline.\"\r\n            );\r\n          }\r\n        });\r\n    }\r\n  }, [profileUsername]);\r\n  useEffect(() => {\r\n    if (profileUsername) {\r\n      if (viewUsername) {\r\n        db.collection(\"users\")\r\n          .doc(viewUsername)\r\n          .collection(\"followings\")\r\n          .doc(profileUsername)\r\n          .onSnapshot((doc) => {\r\n            if (doc.exists) {\r\n              setFollowed(true);\r\n            } else {\r\n              setFollowed(false);\r\n            }\r\n          });\r\n      } else {\r\n        setFollowed(false);\r\n      }\r\n    }\r\n  }, [profileUsername, viewUsername]);\r\n  const handleFollow = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"Follow function called\");\r\n    if (followed != null) {\r\n      if (followed) {\r\n        //remove them\r\n        db.collection(\"users\")\r\n          .doc(profileUsername)\r\n          .collection(\"followers\")\r\n          .doc(viewUsername)\r\n          .delete();\r\n        db.collection(\"users\")\r\n          .doc(viewUsername)\r\n          .collection(\"followings\")\r\n          .doc(profileUsername)\r\n          .delete();\r\n\r\n        setFollowed(false);\r\n      } else if (viewUsername) {\r\n        db.collection(\"users\")\r\n          .doc(viewUsername)\r\n          .collection(\"followings\")\r\n          .doc(profileUsername)\r\n          .set({ following: true });\r\n        db.collection(\"users\")\r\n          .doc(profileUsername)\r\n          .collection(\"followers\")\r\n          .doc(viewUsername)\r\n          .set({ followed: true });\r\n        setFollowed(true);\r\n      } else {\r\n        setLoginOpen(true);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <Header\r\n        key={loginOpen}\r\n        setHomeUserName={setViewUsername}\r\n        loginOpen={loginOpen}\r\n        setLoginOpen={setLoginOpen}\r\n      />\r\n      {profileUsername ? (\r\n        <div>\r\n          <Link to={`/users/${profileUsername}`}>\r\n            <Avatar\r\n              className=\"post__avatar\"\r\n              alt={profileUsername}\r\n              src={avatar}\r\n            />\r\n          </Link>\r\n          <p>{postNo} posts</p>\r\n          <p>{followerNo} followers</p>\r\n          <p>{followingNo} following</p>\r\n          {viewUsername === profileUsername ? (\r\n            <></>\r\n          ) : (\r\n            <IconButton onClick={handleFollow}>\r\n              {followed ? <HighlightOffIcon /> : <ControlPointIcon />}\r\n            </IconButton>\r\n          )}\r\n          <div className=\"profile_posts\">\r\n            {postIds ? (\r\n              <PostList\r\n                postIds={postIds}\r\n                curUsername={viewUsername}\r\n                setLoginOpen={setLoginOpen}\r\n              />\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <p>No such user</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SingleUserPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Home from \"./Home\";\r\nimport NotFound from \"./NotFound\";\r\nimport SinglePostPage from \"./SinglePostPage\";\r\nimport SingleUserPage from \"./SingleUserPage\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/posts/:postId\" component={SinglePostPage} />\r\n        <Route exact path=\"/users/:username\" component={SingleUserPage} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}