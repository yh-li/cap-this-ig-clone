{"version":3,"sources":["firebase.js","Comment.js","Post.js","ProfileIcon.js","Header.js","ImageUpload.js","Home.js","NotFound.js","SinglePostPage.js","SingleUserPage.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","Comment","commentId","postId","curUserName","username","text","className","key","IconButton","color","aria-label","component","onClick","collection","doc","delete","then","console","log","Post","forwardRef","ref","imageUrl","caption","useState","comments","setComments","comment","setComment","avatar","setAvatar","liked","setLiked","likedBy","setLikedBy","useEffect","orderBy","onSnapshot","querySnapshot","empty","docs","data","avatarUrl","get","exists","length","unsubscribe","snapshot","map","id","to","Avatar","alt","src","style","textDecoration","fontSize","trim","e","preventDefault","set","href","type","placeholder","value","onChange","target","disabled","add","ProfileIcon","user","height","top","left","transform","modalStyle","avatarOpen","setAvatarOpen","classes","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","useStyles","url","setUrl","progress","setProgress","displayName","limit","Modal","open","onClose","max","files","Button","name","put","on","Math","round","bytesTransferred","totalBytes","error","child","getDownloadURL","timestamp","FieldValue","serverTimestamp","getModalStyle","Header","setHomeUserName","setOpen","registerOpen","setRegisterOpen","setUsername","email","setEmail","password","setPassword","setUser","onAuthStateChanged","authUser","Input","signInWithEmailAndPassword","catch","alert","message","createUserWithEmailAndPassword","updateProfile","currentUser","uid","signOut","ImageUpload","image","setImage","setCaption","imageFileName","uuidv4","concat","Home","posts","setPosts","postIds","setPostIds","userPostIds","forEach","push","where","queryPosts","post","NotFound","setHomeUser","SinglePostPage","props","params","SingleUserPage","match","userId","App","exact","path","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4c29136c.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyCZ7SX_2NwAxflElWcWaOe7QuqBk2oXRvk\",\r\n  authDomain: \"cap-this.firebaseapp.com\",\r\n  databaseURL: \"https://cap-this-default-rtdb.firebaseio.com\",\r\n  projectId: \"cap-this\",\r\n  storageBucket: \"cap-this.appspot.com\",\r\n  messagingSenderId: \"357983648624\",\r\n  appId: \"1:357983648624:web:fa4a414168ee3a9317edb5\",\r\n  measurementId: \"G-2C4QFNL1B1\",\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nexport { db, auth, storage };\r\n","import React from \"react\";\r\nimport \"./Comment.css\";\r\nimport { db } from \"./firebase\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\nfunction Comment({ commentId, postId, curUserName, username, text }) {\r\n  return (\r\n    <div className=\"comment\" key=\"comment.id\">\r\n      <div>\r\n        <b>{username}</b> {text}\r\n      </div>\r\n\r\n      {curUserName === username ? (\r\n        <IconButton\r\n          color=\"primary\"\r\n          aria-label=\"upload picture\"\r\n          component=\"span\"\r\n          className=\"delete-comment\"\r\n        >\r\n          <DeleteIcon\r\n            className=\"delete-icon\"\r\n            onClick={() => {\r\n              db.collection(\"posts\")\r\n                .doc(postId)\r\n                .collection(\"comments\")\r\n                .doc(commentId)\r\n                .delete()\r\n                .then(console.log(commentId));\r\n            }}\r\n          />\r\n        </IconButton>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n","import React, { useState, useEffect, forwardRef } from \"react\";\r\nimport \"./Post.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { db } from \"./firebase\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport Comment from \"./Comment\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Post = forwardRef(\r\n  ({ username, postId, imageUrl, caption, curUserName }, ref) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [comment, setComment] = useState(\"\");\r\n    const [avatar, setAvatar] = useState(\"/static/images/avatar/1.jpg\");\r\n    const [liked, setLiked] = useState();\r\n    const [likedBy, setLikedBy] = useState();\r\n    useEffect(() => {\r\n      db.collection(\"avatars\")\r\n        .doc(username)\r\n        .collection(\"avatarUrls\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((querySnapshot) => {\r\n          if (!querySnapshot.empty) {\r\n            setAvatar(querySnapshot.docs[0].data().avatarUrl);\r\n          } else {\r\n            console.log(\"No avatar\");\r\n          }\r\n        });\r\n      db.collection(\"posts\")\r\n        .doc(postId)\r\n        .collection(\"likes\")\r\n        .doc(curUserName)\r\n        .get()\r\n        .then((doc) => {\r\n          if (doc.exists) {\r\n            //console.log(doc.data());\r\n            setLiked(true);\r\n          } else {\r\n            //console.log(\"No likes from current user\");\r\n            setLiked(false);\r\n          }\r\n        });\r\n      db.collection(\"posts\")\r\n        .doc(postId)\r\n        .collection(\"likes\")\r\n        .onSnapshot((querySnapshot) => {\r\n          setLikedBy(querySnapshot.docs.length);\r\n        });\r\n\r\n      //console.log(avatar);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n      let unsubscribe;\r\n      if (postId) {\r\n        unsubscribe = db\r\n          .collection(\"posts\") //accessing posts\r\n          .doc(postId) //going to that specific postId document\r\n          .collection(\"comments\") //going inside its comments collection\r\n          .onSnapshot((snapshot) => {\r\n            setComments(\r\n              snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                comment: doc.data(),\r\n              }))\r\n            );\r\n            // snapshot.docs.map((doc) => {\r\n            //   console.log(\"Comment:\");\r\n            //   console.log(doc.data());\r\n            // });\r\n          }); //this on snapchat means anytime there's a new comment added\r\n        //there's the listener to this specific post\r\n      }\r\n\r\n      return () => {\r\n        unsubscribe();\r\n      };\r\n    }, [postId]);\r\n\r\n    const postComment = (e) => {\r\n      e.preventDefault();\r\n\r\n      db.collection(\"posts\").doc(postId).collection(\"comments\").add({\r\n        text: comment,\r\n        username: curUserName,\r\n      });\r\n      setComment(\"\");\r\n    };\r\n\r\n    const handleLike = (e) => {\r\n      e.preventDefault();\r\n      if (liked != null) {\r\n        if (liked) {\r\n          db.collection(\"posts\")\r\n            .doc(postId)\r\n            .collection(\"likes\")\r\n            .doc(curUserName)\r\n            .delete();\r\n          setLiked(false);\r\n        } else {\r\n          db.collection(\"posts\")\r\n            .doc(postId)\r\n            .collection(\"likes\")\r\n            .doc(curUserName)\r\n            .set({ liked: true });\r\n          setLiked(true);\r\n        }\r\n      }\r\n    };\r\n    return (\r\n      <div className=\"post\" ref={ref}>\r\n        <div className=\"post__header\">\r\n          <div className=\"post__meta\">\r\n            <Link to={`/users/${username}`}>\r\n              <Avatar className=\"post__avatar\" alt={username} src={avatar} />\r\n            </Link>\r\n            <Link\r\n              to={`/users/${username}`}\r\n              style={{ color: \"inherit\", textDecoration: \"none\" }}\r\n            >\r\n              <h3>{username}</h3>\r\n            </Link>\r\n          </div>\r\n          <div className=\"post__option\">\r\n            {curUserName && curUserName === username ? (\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"upload picture\"\r\n                component=\"span\"\r\n                className=\"post__delete\"\r\n                onClick={() => {\r\n                  db.collection(\"posts\")\r\n                    .doc(postId)\r\n                    .collection(\"comments\")\r\n                    .onSnapshot((snapshot) => {\r\n                      snapshot.docs.map((doc) => {\r\n                        doc.ref.delete();\r\n                      });\r\n                    });\r\n                  db.collection(\"posts\").doc(postId).delete();\r\n                  db.collection(\"users\")\r\n                    .doc(username)\r\n                    .collection(\"postIds\")\r\n                    .doc(postId)\r\n                    .delete();\r\n                }}\r\n              >\r\n                <DeleteIcon style={{ fontSize: 20 }} className=\"delete-icon\" />\r\n              </IconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {imageUrl ? (\r\n          imageUrl.trim() === \"\" ? (\r\n            <></>\r\n          ) : (\r\n            <img className=\"post__image\" src={imageUrl} alt=\"post\" />\r\n          )\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {caption ? (\r\n          <h4 className=\"post__text\">\r\n            <Link\r\n              to={`/users/${username}`}\r\n              style={{ color: \"inherit\", textDecoration: \"none\" }}\r\n            >\r\n              {username}\r\n            </Link>{\" \"}\r\n            <span className=\"post__caption\">{caption}</span>\r\n          </h4>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <div className=\"post__button__row\">\r\n          <div className=\"post__button__row__left\">\r\n            <IconButton onClick={handleLike}>\r\n              {liked ? <FavoriteIcon /> : <FavoriteBorderIcon />}\r\n            </IconButton>\r\n            <IconButton href={`/posts/${postId}`}>\r\n              <ChatBubbleOutlineIcon />\r\n            </IconButton>\r\n            <IconButton>\r\n              <ShareIcon />\r\n            </IconButton>\r\n          </div>\r\n          <div className=\"post__button__row__left\">\r\n            <IconButton>\r\n              <BookmarkBorderIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <div className=\"post__comments\">\r\n          {comments.map(({ id, comment }) => {\r\n            console.log(\"Comment id \", id);\r\n            console.log(\"Commnet made by \", comment.username);\r\n            return (\r\n              <Comment\r\n                key={id}\r\n                commentId={id}\r\n                postId={postId}\r\n                curUserName={curUserName}\r\n                username={comment.username}\r\n                text={comment.text}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n        {likedBy > 0 ? (\r\n          <div className=\"post__liked_by\">Liked by {likedBy}</div>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {curUserName && (\r\n          <form className=\"post__commentBox\">\r\n            <input\r\n              className=\"post__input\"\r\n              type=\"text\"\r\n              placeholder=\"Add a comment...\"\r\n              value={comment}\r\n              onChange={(e) => setComment(e.target.value)}\r\n            />\r\n\r\n            <button\r\n              disabled={!comment}\r\n              className=\"post__button\"\r\n              type=\"submit\"\r\n              onClick={postComment}\r\n            >\r\n              Post\r\n            </button>\r\n          </form>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Post;\r\n","import React, { useState } from \"react\";\r\nimport \"./ProfileIcon.css\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  IconButton,\r\n  Modal,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport firebase from \"firebase\";\r\nimport { storage, db } from \"./firebase\";\r\nfunction ProfileIcon({ user }) {\r\n  const [modalStyle] = useState(getModalStyle);\r\n  const [avatarOpen, setAvatarOpen] = useState(false);\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: \"absolute\",\r\n      width: 400,\r\n      height: 200,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"2px solid #000\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  function getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n      height: \"300px\",\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  const [avatar, setAvatar] = useState(null);\r\n  const [url, setUrl] = useState(\"/static/images/avatar/1.jpg\");\r\n  const [progress, setProgress] = useState(0);\r\n  db.collection(\"avatars\")\r\n    .doc(user.displayName)\r\n    .collection(\"avatarUrls\")\r\n    .orderBy(\"timestamp\", \"desc\")\r\n    .limit(1)\r\n    .get()\r\n    .then((querySnapshot) => {\r\n      if (!querySnapshot.empty) {\r\n        querySnapshot.docs.map((doc) => {\r\n          setUrl(doc.data().avatarUrl);\r\n        });\r\n      } else {\r\n        console.log(\"No avatar\");\r\n      }\r\n    });\r\n  const handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setAvatar(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    //get a reference, access the storage in firebase\r\n    //put avatar put the avatar you just selected to the\r\n    if (avatar) {\r\n      const uploadTask = storage.ref(`avatars/${avatar.name}`).put(avatar);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          // progress function ...\r\n          const progress = Math.round(\r\n            //a percentage upload progress\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            //for visualizing the upload progress\r\n          );\r\n          setProgress(progress);\r\n        },\r\n        (error) => {\r\n          // Error function ...\r\n          console.log(error);\r\n        },\r\n        () => {\r\n          storage\r\n            .ref(\"avatars\") //go to the avatar folder\r\n            .child(avatar.name) //go to the avatar.name file\r\n            .getDownloadURL() //and then get the downloading file\r\n            .then((url) => {\r\n              setUrl(url);\r\n              // complete function ...\r\n              console.log(url);\r\n              // post avatar inside db\r\n              db.collection(\"avatars\")\r\n                .doc(user.displayName)\r\n                .collection(\"avatarUrls\")\r\n                .add({\r\n                  avatarUrl: url,\r\n                  timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                });\r\n\r\n              setProgress(0);\r\n              setAvatar(null);\r\n              setAvatarOpen(false);\r\n            });\r\n        }\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        onClick={() => {\r\n          setAvatarOpen(true);\r\n        }}\r\n      >\r\n        <Avatar\r\n          className=\"app__headerAvatar\"\r\n          alt={user.displayName}\r\n          src={url}\r\n        />\r\n      </IconButton>\r\n      <Modal open={avatarOpen} onClose={() => setAvatarOpen(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <form className=\"app__setAvatar\">\r\n            <div className=\"avatar\">\r\n              <progress\r\n                className=\"avatarupload__progress\"\r\n                value={progress}\r\n                max=\"100\"\r\n              />\r\n              <div>\r\n                <input type=\"file\" onChange={handleChange} />\r\n                <Button className=\"avatarupload__button\" onClick={handleUpload}>\r\n                  Set a profile image...\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileIcon;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Header.css\";\r\nimport { db, auth } from \"./firebase\";\r\nimport {\r\n  Button,\r\n  Avatar,\r\n  makeStyles,\r\n  Modal,\r\n  Input,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport ProfileIcon from \"./ProfileIcon\";\r\nimport { Link } from \"react-router-dom\";\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    height: \"300px\",\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    height: 200,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\nfunction Header({ setHomeUserName }) {\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n  const [open, setOpen] = useState(false);\r\n  const [registerOpen, setRegisterOpen] = useState(false);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\r\n      //listen for any single time any authentication changes\r\n      //like login, logout\r\n      console.log(\"Auth State Change.\");\r\n      if (authUser) {\r\n        // user is logged in...\r\n        setUser(authUser);\r\n        if (authUser.displayName) {\r\n          console.log(authUser.displayName);\r\n          console.log(\"Signed in\");\r\n          setHomeUserName(authUser.displayName);\r\n        } else {\r\n          console.log(\"New user signed in\");\r\n        }\r\n      } else {\r\n        //use logged out\r\n        setUser(null);\r\n        setHomeUserName(null);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      //perform some clean up actions when user or username changes\r\n      unsubscribe();\r\n    };\r\n  }, [user, username]);\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then((authUser) => {\r\n        setHomeUserName(authUser.user.displayName);\r\n      })\r\n      .catch((error) => alert(error.message));\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n    console.log(\"New Register\");\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((authUser) => {\r\n        //console.log(authUser);\r\n        return authUser.user.updateProfile({\r\n          displayName: username,\r\n        });\r\n      })\r\n      .then(() => {\r\n        db.collection(\"users\").doc(auth.currentUser.displayName).set({\r\n          username: auth.currentUser.displayName,\r\n          uid: auth.currentUser.uid,\r\n        });\r\n        setHomeUserName(auth.currentUser.displayName);\r\n      })\r\n      .catch((error) => alert(error.message));\r\n\r\n    setRegisterOpen(false);\r\n  };\r\n  return (\r\n    <div className=\"header\">\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <form className=\"home__login\">\r\n            <center>\r\n              <img className=\"home__headerImage\" src=\"capThisLogo.png\" alt=\"\" />\r\n            </center>\r\n\r\n            <Input\r\n              placeholder=\"email\"\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Input\r\n              placeholder=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button onClick={handleLogin}>Login</Button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal open={registerOpen} onClose={() => setRegisterOpen(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <form className=\"home__login\">\r\n            <center>\r\n              <img className=\"home__headerImage\" src=\"capThisLogo.png\" alt=\"\" />\r\n            </center>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <Input\r\n              placeholder=\"email\"\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Input\r\n              placeholder=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button onClick={handleRegister}>Register</Button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n      <div className=\"home__header\">\r\n        <Link to=\"/\">\r\n          {\" \"}\r\n          <img className=\"home__headerImage\" src=\"capThisLogo.png\" alt=\"\" />\r\n        </Link>\r\n        {user?.displayName ? (\r\n          <div className=\"home__headerRight\">\r\n            <Button\r\n              onClick={() => {\r\n                auth.signOut();\r\n                console.log(\"SIGN OUT!\");\r\n              }}\r\n            >\r\n              Logout\r\n            </Button>\r\n            <ProfileIcon user={user} />\r\n          </div>\r\n        ) : (\r\n          <form className=\"home__loginHome\">\r\n            <Button onClick={() => setOpen(true)}>Login</Button>\r\n            <Button onClick={() => setRegisterOpen(true)}>Sign Up</Button>\r\n          </form>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { useState } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport { storage, db } from \"./firebase\";\r\nimport \"./ImageUpload.css\";\r\nimport { Input, Button } from \"@material-ui/core\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst ImageUpload = ({ username }) => {\r\n  const [image, setImage] = useState(null);\r\n  const [url, setUrl] = useState(\"\");\r\n  const [progress, setProgress] = useState(0);\r\n  const [caption, setCaption] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    //get a reference, access the storage in firebase\r\n    //put image put the image you just selected to the\r\n    if (image) {\r\n      //build a unique name\r\n      const imageFileName = uuidv4().concat(\"-\", image.name);\r\n      const uploadTask = storage.ref(`images/${imageFileName}`).put(image);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          // progress function ...\r\n          const progress = Math.round(\r\n            //a percentage upload progress\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            //for visualizing the upload progress\r\n          );\r\n          setProgress(progress);\r\n        },\r\n        (error) => {\r\n          // Error function ...\r\n          console.log(error);\r\n        },\r\n        () => {\r\n          // complete function ...\r\n          storage\r\n            .ref(\"images\") //go to the image folder\r\n            .child(imageFileName) //go to the image.name file\r\n            .getDownloadURL() //and then get the downloading file\r\n            .then((url) => {\r\n              setUrl(url);\r\n\r\n              // post image inside db\r\n              db.collection(\"posts\")\r\n                .add({\r\n                  imageUrl: url,\r\n                  caption: caption,\r\n                  username: username,\r\n                  timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                })\r\n                .then((doc) => {\r\n                  db.collection(\"users\")\r\n                    .doc(username)\r\n                    .collection(\"postIds\")\r\n                    .doc(doc.id)\r\n                    .set({\r\n                      postId: doc.id,\r\n                    });\r\n                });\r\n\r\n              setProgress(0);\r\n              setCaption(\"\");\r\n              setImage(null);\r\n            });\r\n        }\r\n      );\r\n    } else if (caption.trim() !== \"\") {\r\n      db.collection(\"posts\")\r\n        .add({\r\n          caption: caption,\r\n          username: username,\r\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n        })\r\n        .then((doc) => {\r\n          db.collection(\"users\")\r\n            .doc(username)\r\n            .collection(\"postIds\")\r\n            .doc(doc.id)\r\n            .set({\r\n              postId: doc.id,\r\n            });\r\n        });\r\n      setCaption(\"\");\r\n    } else {\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"imageupload\">\r\n      <progress className=\"imageupload__progress\" value={progress} max=\"100\" />\r\n      <Input\r\n        placeholder=\"Enter a caption\"\r\n        value={caption}\r\n        onChange={(e) => setCaption(e.target.value)}\r\n      />\r\n      <div>\r\n        <input type=\"file\" onChange={handleChange} />\r\n        <Button className=\"imageupload__button\" onClick={handleUpload}>\r\n          Upload\r\n        </Button>\r\n      </div>\r\n\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Home.css\";\r\nimport Post from \"./Post\";\r\nimport Header from \"./Header\";\r\nimport ImageUpload from \"./ImageUpload\";\r\nimport { db, auth } from \"./firebase\";\r\nimport {\r\n  Button,\r\n  Avatar,\r\n  makeStyles,\r\n  Modal,\r\n  Input,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport ProfileIcon from \"./ProfileIcon\";\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    height: \"300px\",\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    height: 200,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nfunction Home() {\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n  const [posts, setPosts] = useState([]);\r\n  const [postIds, setPostIds] = useState([]);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [open, setOpen] = useState(false);\r\n  const [avatarOpen, setAvatarOpen] = useState(false);\r\n  const [registerOpen, setRegisterOpen] = useState(false);\r\n\r\n  //useEffect runs a piece of code based on a specific condition\r\n  //if we leave the conditions as blank\r\n  //it will run once when the component loads\r\n  //useEffect(()=>{\r\n  //this is the callback function, or the code that will run\r\n  //}),[INSIDE ARE CONDITIONS])\r\n  //if we leave [posts] there as conditions, it will run\r\n  //everytime [posts] changes\r\n\r\n  //console.log(db.collection(\"posts\").orderBy(\"timestamp\", \"desc\"));\r\n  useEffect(() => {\r\n    console.log(\"username changed to \", username);\r\n    if (username) {\r\n      db.collection(\"users\")\r\n        .doc(username)\r\n        .collection(\"postIds\")\r\n        .onSnapshot((snapshot) => {\r\n          /*           setPosts(\r\n            snapshot.docs.map((doc) => ({ id: doc.id, post: doc.data() }))\r\n          ); */\r\n          const userPostIds = [];\r\n          snapshot.forEach((doc) => {\r\n            userPostIds.push(doc.id);\r\n          });\r\n          setPostIds(userPostIds);\r\n        });\r\n    } else {\r\n      setPostIds([]);\r\n    }\r\n  }, [username]);\r\n\r\n  useEffect(() => {\r\n    console.log(postIds);\r\n    if (postIds.length > 0) {\r\n      db.collection(\"posts\")\r\n        .where(\"__name__\", \"in\", postIds)\r\n        .onSnapshot((snapshot) => {\r\n          const queryPosts = [];\r\n\r\n          snapshot.forEach((doc) => {\r\n            queryPosts.push({ id: doc.id, post: doc.data() });\r\n          });\r\n          setPosts(queryPosts);\r\n        });\r\n    }\r\n  }, [postIds]);\r\n\r\n  /*   const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch((error) => alert(error.message));\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((authUser) => {\r\n        return authUser.user.updateProfile({\r\n          displayName: username,\r\n        });\r\n      })\r\n      .catch((error) => alert(error.message));\r\n    setRegisterOpen(false);\r\n  }; */\r\n  return (\r\n    <div className=\"home\">\r\n      <Header setHomeUserName={setUsername} />\r\n      {/* <Modal open={open} onClose={() => setOpen(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <form className=\"home__login\">\r\n            <center>\r\n              <img className=\"home__headerImage\" src=\"capThisLogo.png\" alt=\"\" />\r\n            </center>\r\n\r\n            <Input\r\n              placeholder=\"email\"\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Input\r\n              placeholder=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button onClick={handleLogin}>Login</Button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal open={registerOpen} onClose={() => setRegisterOpen(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <form className=\"home__login\">\r\n            <center>\r\n              <img className=\"home__headerImage\" src=\"capThisLogo.png\" alt=\"\" />\r\n            </center>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <Input\r\n              placeholder=\"email\"\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Input\r\n              placeholder=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button onClick={handleRegister}>Register</Button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n      <div className=\"home__header\">\r\n        <img className=\"home__headerImage\" src=\"capThisLogo.png\" alt=\"\" />\r\n        {user?.displayName ? (\r\n          <div className=\"home__headerRight\">\r\n            <Button onClick={() => auth.signOut()}>Logout</Button>\r\n            <ProfileIcon user={user} />\r\n          </div>\r\n        ) : (\r\n          <form className=\"home__loginHome\">\r\n            <Button onClick={() => setOpen(true)}>Login</Button>\r\n            <Button onClick={() => setRegisterOpen(true)}>Sign Up</Button>\r\n          </form>\r\n        )}\r\n      </div> */}\r\n\r\n      {/* <Post\r\n        user=\"d\"\r\n        key={23123123}\r\n        postId={\"\"}\r\n        username={\"helloya\"}\r\n        caption={\"captionThis!\"}\r\n        imageUrl=\"https://support-wildrift.riotgames.com/hc/article_attachments/360104660413/WR_LuxTrial_EventArticle_Banner.jpg\"\r\n      />\r\n      <Post\r\n        user=\"d\"\r\n        key={23123123}\r\n        postId={\"\"}\r\n        username={\"helloya\"}\r\n        caption={\"captionThis!\"}\r\n        imageUrl=\"https://static.wikia.nocookie.net/leagueoflegends/images/f/f4/Lux_Render.png/revision/latest?cb=20200209203614\"\r\n      /> */}\r\n      <div className=\"home__posts\">\r\n        <div className=\"home__postsLeft\">\r\n          <FlipMove>\r\n            {posts.map(({ id, post }) => {\r\n              return (\r\n                <Post\r\n                  key={id}\r\n                  postId={id}\r\n                  username={post.username}\r\n                  caption={post.caption}\r\n                  imageUrl={post.imageUrl}\r\n                  curUserName={username}\r\n                />\r\n              );\r\n            })}\r\n          </FlipMove>\r\n        </div>\r\n      </div>\r\n\r\n      {username ? (\r\n        <div className=\"home__upload\">\r\n          <ImageUpload username={username} />\r\n        </div>\r\n      ) : (\r\n        <center>\r\n          <h3>Login to upload</h3>\r\n        </center>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Header from \"./Header\";\r\nfunction NotFound() {\r\n  return (\r\n    <div>\r\n      <Header setHomeUser={() => null} />\r\n      404\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { useState } from \"react\";\r\nimport Header from \"./Header\";\r\nimport Post from \"./Post\";\r\n\r\nfunction SinglePostPage(props) {\r\n  const [username, setUsername] = useState();\r\n  const post = {};\r\n  return (\r\n    <div>\r\n      <Header setHomeUserName={() => null} />\r\n      <Post\r\n        postId={props.params.postId}\r\n        username={post.username}\r\n        caption={post.caption}\r\n        imageUrl={post.imageUrl}\r\n        curUserName={username}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SinglePostPage;\r\n","import React from \"react\";\r\n\r\nfunction SingleUserPage(props) {\r\n  return <div>{props.match.params.userId}</div>;\r\n}\r\n\r\nexport default SingleUserPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Home from \"./Home\";\r\nimport NotFound from \"./NotFound\";\r\nimport SinglePostPage from \"./SinglePostPage\";\r\nimport SingleUserPage from \"./SingleUserPage\";\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\" component={Home} />\r\n        <Route exact path=\"/posts/:postId\" component={SinglePostPage} />\r\n        <Route exact path=\"/users/:userId\" component={SingleUserPage} />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}