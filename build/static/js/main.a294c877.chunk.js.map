{"version":3,"sources":["firebase.js","Comment.js","Post.js","ImageUpload.js","ProfileIcon.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","storage","Comment","commentId","postId","curUser","username","text","className","key","displayName","IconButton","color","aria-label","component","onClick","collection","doc","delete","then","console","log","Post","forwardRef","ref","user","imageUrl","caption","useState","comments","setComments","comment","setComment","avatar","setAvatar","useEffect","orderBy","onSnapshot","querySnapshot","empty","docs","data","avatarUrl","unsubscribe","snapshot","map","id","Avatar","alt","src","style","fontSize","trim","type","placeholder","value","onChange","e","target","disabled","preventDefault","add","ImageUpload","image","setImage","setUrl","progress","setProgress","setCaption","max","Input","files","Button","imageFileName","uuidv4","concat","name","put","on","Math","round","bytesTransferred","totalBytes","error","child","getDownloadURL","url","timestamp","FieldValue","serverTimestamp","ProfileIcon","height","top","left","transform","modalStyle","avatarOpen","setAvatarOpen","classes","makeStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","useStyles","limit","get","Modal","open","onClose","getModalStyle","App","posts","setPosts","setUsername","email","setEmail","password","setPassword","setUser","setOpen","registerOpen","setRegisterOpen","onAuthStateChanged","authUser","post","signInWithEmailAndPassword","catch","alert","message","createUserWithEmailAndPassword","updateProfile","signOut","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a294c877.chunk.js","sourcesContent":["import firebase from \"firebase\";\r\n\r\nconst firebaseApp = firebase.initializeApp({\r\n  apiKey: \"AIzaSyCZ7SX_2NwAxflElWcWaOe7QuqBk2oXRvk\",\r\n  authDomain: \"cap-this.firebaseapp.com\",\r\n  databaseURL: \"https://cap-this-default-rtdb.firebaseio.com\",\r\n  projectId: \"cap-this\",\r\n  storageBucket: \"cap-this.appspot.com\",\r\n  messagingSenderId: \"357983648624\",\r\n  appId: \"1:357983648624:web:fa4a414168ee3a9317edb5\",\r\n  measurementId: \"G-2C4QFNL1B1\",\r\n});\r\n\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst storage = firebase.storage();\r\n\r\nexport { db, auth, storage };\r\n","import React from \"react\";\r\nimport \"./Comment.css\";\r\nimport { db } from \"./firebase\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport { IconButton } from \"@material-ui/core\";\r\n\r\nfunction Comment({ commentId, postId, curUser, username, text }) {\r\n  return (\r\n    <div className=\"comment\" key=\"comment.id\">\r\n      <div>\r\n        <b>{username}</b> {text}\r\n      </div>\r\n\r\n      {curUser && curUser?.displayName === username ? (\r\n        <IconButton\r\n          color=\"primary\"\r\n          aria-label=\"upload picture\"\r\n          component=\"span\"\r\n          className=\"delete-comment\"\r\n        >\r\n          <DeleteIcon\r\n            className=\"delete-icon\"\r\n            onClick={() => {\r\n              db.collection(\"posts\")\r\n                .doc(postId)\r\n                .collection(\"comments\")\r\n                .doc(commentId)\r\n                .delete()\r\n                .then(console.log(commentId));\r\n            }}\r\n          />\r\n        </IconButton>\r\n      ) : (\r\n        <></>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Comment;\r\n","import React, { useState, useEffect, forwardRef } from \"react\";\r\nimport \"./Post.css\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport { db } from \"./firebase\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport FavoriteBorderIcon from \"@material-ui/icons/FavoriteBorder\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport ChatBubbleOutlineIcon from \"@material-ui/icons/ChatBubbleOutline\";\r\nimport ShareIcon from \"@material-ui/icons/Share\";\r\nimport BookmarkBorderIcon from \"@material-ui/icons/BookmarkBorder\";\r\nimport BookmarkIcon from \"@material-ui/icons/Bookmark\";\r\nimport { IconButton } from \"@material-ui/core\";\r\nimport Comment from \"./Comment\";\r\n\r\nconst Post = forwardRef(\r\n  ({ user, username, postId, imageUrl, caption, curUser }, ref) => {\r\n    const [comments, setComments] = useState([]);\r\n    const [comment, setComment] = useState(\"\");\r\n    const [avatar, setAvatar] = useState(\"/static/images/avatar/1.jpg\");\r\n    useEffect(() => {\r\n      db.collection(\"avatars\")\r\n        .doc(username)\r\n        .collection(\"avatarUrls\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((querySnapshot) => {\r\n          if (!querySnapshot.empty) {\r\n            setAvatar(querySnapshot.docs[0].data().avatarUrl);\r\n          } else {\r\n            console.log(\"No avatar\");\r\n          }\r\n        });\r\n\r\n      //console.log(avatar);\r\n    }, []);\r\n    useEffect(() => {\r\n      let unsubscribe;\r\n      if (postId) {\r\n        unsubscribe = db\r\n          .collection(\"posts\") //accessing posts\r\n          .doc(postId) //going to that specific postId document\r\n          .collection(\"comments\") //going inside its comments collection\r\n          .onSnapshot((snapshot) => {\r\n            setComments(\r\n              snapshot.docs.map((doc) => ({\r\n                id: doc.id,\r\n                comment: doc.data(),\r\n              }))\r\n            );\r\n          }); //this on snapchat means anytime there's a new comment added\r\n        //there's the listener to this specific post\r\n      }\r\n\r\n      return () => {\r\n        unsubscribe();\r\n      };\r\n    }, [postId]);\r\n\r\n    const postComment = (e) => {\r\n      e.preventDefault();\r\n\r\n      db.collection(\"posts\").doc(postId).collection(\"comments\").add({\r\n        text: comment,\r\n        username: user.displayName,\r\n      });\r\n      setComment(\"\");\r\n    };\r\n\r\n    return (\r\n      <div className=\"post\" ref={ref}>\r\n        <div className=\"post__header\">\r\n          <div className=\"post__meta\">\r\n            <Avatar className=\"post__avatar\" alt={username} src={avatar} />\r\n            <h3>{username}</h3>\r\n          </div>\r\n          <div className=\"post__option\">\r\n            {curUser && curUser?.displayName === username ? (\r\n              <IconButton\r\n                color=\"primary\"\r\n                aria-label=\"upload picture\"\r\n                component=\"span\"\r\n                className=\"post__delete\"\r\n                onClick={() => {\r\n                  db.collection(\"posts\").doc(postId).delete();\r\n                }}\r\n              >\r\n                <DeleteIcon style={{ fontSize: 20 }} className=\"delete-icon\" />\r\n              </IconButton>\r\n            ) : (\r\n              <></>\r\n            )}\r\n          </div>\r\n        </div>\r\n        {imageUrl ? (\r\n          imageUrl.trim() === \"\" ? (\r\n            <></>\r\n          ) : (\r\n            <img className=\"post__image\" src={imageUrl} alt=\"post\" />\r\n          )\r\n        ) : (\r\n          <></>\r\n        )}\r\n        {caption ? (\r\n          <h4 className=\"post__text\">\r\n            {username} <span className=\"post__caption\">{caption}</span>\r\n          </h4>\r\n        ) : (\r\n          <></>\r\n        )}\r\n        <div className=\"post__button__row\">\r\n          <div className=\"post__button__row__left\">\r\n            <IconButton>\r\n              <FavoriteBorderIcon />\r\n            </IconButton>\r\n            <IconButton>\r\n              <ChatBubbleOutlineIcon />\r\n            </IconButton>\r\n            <IconButton>\r\n              <ShareIcon />\r\n            </IconButton>\r\n          </div>\r\n          <div className=\"post__button__row__left\">\r\n            <IconButton>\r\n              <BookmarkBorderIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n        <div className=\"post__comments\">\r\n          {comments.map(({ id, comment }) => {\r\n            console.log(id);\r\n            console.log(comment.username);\r\n            return (\r\n              <Comment\r\n                key={id}\r\n                commentId={id}\r\n                postId={postId}\r\n                curUser={curUser}\r\n                username={comment.username}\r\n                text={comment.text}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        {user && (\r\n          <form className=\"post__commentBox\">\r\n            <input\r\n              className=\"post__input\"\r\n              type=\"text\"\r\n              placeholder=\"Add a comment...\"\r\n              value={comment}\r\n              onChange={(e) => setComment(e.target.value)}\r\n            />\r\n\r\n            <button\r\n              disabled={!comment}\r\n              className=\"post__button\"\r\n              type=\"submit\"\r\n              onClick={postComment}\r\n            >\r\n              Post\r\n            </button>\r\n          </form>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nexport default Post;\r\n","import React, { useState } from \"react\";\r\nimport firebase from \"firebase\";\r\nimport { storage, db } from \"./firebase\";\r\nimport \"./ImageUpload.css\";\r\nimport { Input, Button } from \"@material-ui/core\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst ImageUpload = ({ username }) => {\r\n  const [image, setImage] = useState(null);\r\n  const [url, setUrl] = useState(\"\");\r\n  const [progress, setProgress] = useState(0);\r\n  const [caption, setCaption] = useState(\"\");\r\n\r\n  const handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setImage(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    //get a reference, access the storage in firebase\r\n    //put image put the image you just selected to the\r\n    if (image) {\r\n      //build a unique name\r\n      const imageFileName = uuidv4().concat(\"-\", image.name);\r\n      const uploadTask = storage.ref(`images/${imageFileName}`).put(image);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          // progress function ...\r\n          const progress = Math.round(\r\n            //a percentage upload progress\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            //for visualizing the upload progress\r\n          );\r\n          setProgress(progress);\r\n        },\r\n        (error) => {\r\n          // Error function ...\r\n          console.log(error);\r\n        },\r\n        () => {\r\n          // complete function ...\r\n          storage\r\n            .ref(\"images\") //go to the image folder\r\n            .child(imageFileName) //go to the image.name file\r\n            .getDownloadURL() //and then get the downloading file\r\n            .then((url) => {\r\n              setUrl(url);\r\n\r\n              // post image inside db\r\n              db.collection(\"posts\").add({\r\n                imageUrl: url,\r\n                caption: caption,\r\n                username: username,\r\n                timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n              });\r\n\r\n              setProgress(0);\r\n              setCaption(\"\");\r\n              setImage(null);\r\n            });\r\n        }\r\n      );\r\n    } else if (caption.trim() !== \"\") {\r\n      db.collection(\"posts\").add({\r\n        caption: caption,\r\n        username: username,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      });\r\n      setCaption(\"\");\r\n    } else {\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"imageupload\">\r\n      <progress className=\"imageupload__progress\" value={progress} max=\"100\" />\r\n      <Input\r\n        placeholder=\"Enter a caption\"\r\n        value={caption}\r\n        onChange={(e) => setCaption(e.target.value)}\r\n      />\r\n      <div>\r\n        <input type=\"file\" onChange={handleChange} />\r\n        <Button className=\"imageupload__button\" onClick={handleUpload}>\r\n          Upload\r\n        </Button>\r\n      </div>\r\n\r\n      <br />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n","import React, { useState } from \"react\";\r\nimport \"./ProfileIcon.css\";\r\nimport {\r\n  Avatar,\r\n  Button,\r\n  IconButton,\r\n  Modal,\r\n  makeStyles,\r\n} from \"@material-ui/core\";\r\nimport firebase from \"firebase\";\r\nimport { storage, db } from \"./firebase\";\r\nfunction ProfileIcon({ user }) {\r\n  const [modalStyle] = useState(getModalStyle);\r\n  const [avatarOpen, setAvatarOpen] = useState(false);\r\n  const useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: \"absolute\",\r\n      width: 400,\r\n      height: 200,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"2px solid #000\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n  function getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n\r\n    return {\r\n      height: \"300px\",\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n  }\r\n  const [avatar, setAvatar] = useState(null);\r\n  const [url, setUrl] = useState(\"/static/images/avatar/1.jpg\");\r\n  const [progress, setProgress] = useState(0);\r\n  db.collection(\"avatars\")\r\n    .doc(user.displayName)\r\n    .collection(\"avatarUrls\")\r\n    .orderBy(\"timestamp\", \"desc\")\r\n    .limit(1)\r\n    .get()\r\n    .then((querySnapshot) => {\r\n      if (!querySnapshot.empty) {\r\n        querySnapshot.docs.map((doc) => {\r\n          setUrl(doc.data().avatarUrl);\r\n        });\r\n      } else {\r\n        console.log(\"No avatar\");\r\n      }\r\n    });\r\n  const handleChange = (e) => {\r\n    if (e.target.files[0]) {\r\n      setAvatar(e.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleUpload = () => {\r\n    //get a reference, access the storage in firebase\r\n    //put avatar put the avatar you just selected to the\r\n    if (avatar) {\r\n      const uploadTask = storage.ref(`avatars/${avatar.name}`).put(avatar);\r\n      uploadTask.on(\r\n        \"state_changed\",\r\n        (snapshot) => {\r\n          // progress function ...\r\n          const progress = Math.round(\r\n            //a percentage upload progress\r\n            (snapshot.bytesTransferred / snapshot.totalBytes) * 100\r\n            //for visualizing the upload progress\r\n          );\r\n          setProgress(progress);\r\n        },\r\n        (error) => {\r\n          // Error function ...\r\n          console.log(error);\r\n        },\r\n        () => {\r\n          storage\r\n            .ref(\"avatars\") //go to the avatar folder\r\n            .child(avatar.name) //go to the avatar.name file\r\n            .getDownloadURL() //and then get the downloading file\r\n            .then((url) => {\r\n              setUrl(url);\r\n              // complete function ...\r\n              console.log(url);\r\n              // post avatar inside db\r\n              db.collection(\"avatars\")\r\n                .doc(user.displayName)\r\n                .collection(\"avatarUrls\")\r\n                .add({\r\n                  avatarUrl: url,\r\n                  timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n                });\r\n\r\n              setProgress(0);\r\n              setAvatar(null);\r\n              setAvatarOpen(false);\r\n            });\r\n        }\r\n      );\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <IconButton\r\n        onClick={() => {\r\n          setAvatarOpen(true);\r\n        }}\r\n      >\r\n        <Avatar\r\n          className=\"app__headerAvatar\"\r\n          alt={user.displayName}\r\n          src={url}\r\n        />\r\n      </IconButton>\r\n      <Modal open={avatarOpen} onClose={() => setAvatarOpen(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <form className=\"app__setAvatar\">\r\n            <div className=\"avatar\">\r\n              <progress\r\n                className=\"avatarupload__progress\"\r\n                value={progress}\r\n                max=\"100\"\r\n              />\r\n              <div>\r\n                <input type=\"file\" onChange={handleChange} />\r\n                <Button className=\"avatarupload__button\" onClick={handleUpload}>\r\n                  Set a profile image...\r\n                </Button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileIcon;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./App.css\";\r\nimport Post from \"./Post\";\r\nimport ImageUpload from \"./ImageUpload\";\r\nimport { db, auth } from \"./firebase\";\r\nimport {\r\n  Button,\r\n  Avatar,\r\n  makeStyles,\r\n  Modal,\r\n  Input,\r\n  IconButton,\r\n} from \"@material-ui/core\";\r\nimport FlipMove from \"react-flip-move\";\r\nimport ProfileIcon from \"./ProfileIcon\";\r\n\r\nfunction getModalStyle() {\r\n  const top = 50;\r\n  const left = 50;\r\n\r\n  return {\r\n    height: \"300px\",\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 400,\r\n    height: 200,\r\n    backgroundColor: theme.palette.background.paper,\r\n    border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n  },\r\n}));\r\n\r\nfunction App() {\r\n  const classes = useStyles();\r\n  const [modalStyle] = useState(getModalStyle);\r\n  const [posts, setPosts] = useState([]);\r\n  const [username, setUsername] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [user, setUser] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const [avatarOpen, setAvatarOpen] = useState(false);\r\n  const [registerOpen, setRegisterOpen] = useState(false);\r\n\r\n  //useEffect runs a piece of code based on a specific condition\r\n  //if we leave the conditions as blank\r\n  //it will run once when the component loads\r\n  //useEffect(()=>{\r\n  //this is the callback function, or the code that will run\r\n  //}),[INSIDE ARE CONDITIONS])\r\n  //if we leave [posts] there as conditions, it will run\r\n  //everytime [posts] changes\r\n  useEffect(() => {\r\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\r\n      //listen for any single time any authentication changes\r\n      //like login, logout\r\n      //console.log(\"Auth State Change.\");\r\n      if (authUser) {\r\n        // user is logged in...\r\n        setUser(authUser);\r\n      } else {\r\n        //use logged out\r\n        setUser(null);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      //perform some clean up actions when user or username changes\r\n      unsubscribe();\r\n    };\r\n  }, [user, username]);\r\n\r\n  //console.log(db.collection(\"posts\").orderBy(\"timestamp\", \"desc\"));\r\n  useEffect(() => {\r\n    //db is from firebase\r\n    db.collection(\"posts\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        setPosts(\r\n          snapshot.docs.map((doc) => ({ id: doc.id, post: doc.data() }))\r\n        );\r\n      });\r\n  }, []);\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .catch((error) => alert(error.message));\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleRegister = (e) => {\r\n    e.preventDefault();\r\n    auth\r\n      .createUserWithEmailAndPassword(email, password)\r\n      .then((authUser) => {\r\n        return authUser.user.updateProfile({\r\n          displayName: username,\r\n        });\r\n      })\r\n      .catch((error) => alert(error.message));\r\n    setRegisterOpen(false);\r\n  };\r\n  return (\r\n    <div className=\"app\">\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <form className=\"app__login\">\r\n            <center>\r\n              <img className=\"app__headerImage\" src=\"capThisLogo.png\" alt=\"\" />\r\n            </center>\r\n\r\n            <Input\r\n              placeholder=\"email\"\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Input\r\n              placeholder=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button onClick={handleLogin}>Login</Button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n\r\n      <Modal open={registerOpen} onClose={() => setRegisterOpen(false)}>\r\n        <div style={modalStyle} className={classes.paper}>\r\n          <form className=\"app__login\">\r\n            <center>\r\n              <img className=\"app__headerImage\" src=\"capThisLogo.png\" alt=\"\" />\r\n            </center>\r\n            <Input\r\n              type=\"text\"\r\n              placeholder=\"username\"\r\n              value={username}\r\n              onChange={(e) => setUsername(e.target.value)}\r\n            />\r\n            <Input\r\n              placeholder=\"email\"\r\n              type=\"text\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n            <Input\r\n              placeholder=\"password\"\r\n              type=\"password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n            <Button onClick={handleRegister}>Register</Button>\r\n          </form>\r\n        </div>\r\n      </Modal>\r\n      <div className=\"app__header\">\r\n        <img className=\"app__headerImage\" src=\"capThisLogo.png\" alt=\"\" />\r\n        {user?.displayName ? (\r\n          <div className=\"app__headerRight\">\r\n            <Button onClick={() => auth.signOut()}>Logout</Button>\r\n            <ProfileIcon user={user} />\r\n          </div>\r\n        ) : (\r\n          <form className=\"app__loginHome\">\r\n            <Button onClick={() => setOpen(true)}>Login</Button>\r\n            <Button onClick={() => setRegisterOpen(true)}>Sign Up</Button>\r\n          </form>\r\n        )}\r\n      </div>\r\n\r\n      {/* <Post\r\n        user=\"d\"\r\n        key={23123123}\r\n        postId={\"\"}\r\n        username={\"helloya\"}\r\n        caption={\"captionThis!\"}\r\n        imageUrl=\"https://support-wildrift.riotgames.com/hc/article_attachments/360104660413/WR_LuxTrial_EventArticle_Banner.jpg\"\r\n      />\r\n      <Post\r\n        user=\"d\"\r\n        key={23123123}\r\n        postId={\"\"}\r\n        username={\"helloya\"}\r\n        caption={\"captionThis!\"}\r\n        imageUrl=\"https://static.wikia.nocookie.net/leagueoflegends/images/f/f4/Lux_Render.png/revision/latest?cb=20200209203614\"\r\n      /> */}\r\n      <div className=\"app__posts\">\r\n        <div className=\"app__postsLeft\">\r\n          <FlipMove>\r\n            {posts.map(({ id, post }) => {\r\n              return (\r\n                <Post\r\n                  user={user}\r\n                  key={id}\r\n                  postId={id}\r\n                  username={post.username}\r\n                  caption={post.caption}\r\n                  imageUrl={post.imageUrl}\r\n                  curUser={user}\r\n                />\r\n              );\r\n            })}\r\n          </FlipMove>\r\n        </div>\r\n      </div>\r\n\r\n      {user?.displayName ? (\r\n        <div className=\"app__upload\">\r\n          <ImageUpload username={user.displayName} />\r\n        </div>\r\n      ) : (\r\n        <center>\r\n          <h3>Login to upload</h3>\r\n        </center>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}